export const WhetherOrNot = { yes: '是', no: '否' };
export const TechnicalSide = { backend: '后端', front: '前端', frontBackend: '前后端' };
export const checkInfo = [
  {
    check_type: '前端单元测试运行是否通过',
    side: '前端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'front_unit',
  },
  {
    check_type: '前端图标一致性检查是否通过',
    side: '前端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'front_icon',
  },
  {
    check_type: '前端代码遗漏检查是否通过',
    side: '前端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'front_code',
  },
  {
    check_type: '前端服务git分支是否封板',
    side: '前端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'front_branch',
  },
  {
    check_type: '后端单元测试运行是否通过',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'backend_unit',
  },
  {
    check_type: '后端代码遗漏检查是否通过',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'backend_code',
  },
  {
    check_type: '创建库对比校验是否通过',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'access',
  },
  {
    check_type: '后端环境一致性检查是否通过',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'env',
  },
  {
    check_type: '后端是否可以热更新',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'hot_check',
  },
  {
    check_type: '后端服务git分支是否封板',
    side: '后端',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'backend_branch',
  },
  {
    check_type: '上线前检查checklist是否检查完成',
    side: '公共',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'checkList',
  },
  {
    check_type: '需求阶段是否满足条件（需要测试需达到测试完毕/无需测试需要开发完毕）',
    side: '公共',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'stage',
  },
  {
    check_type: 'previewsql是否已执行',
    side: '公共',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'previewsql',
  },
  {
    check_type: 'web/h5部署时是否勾选自动化测试参数',
    side: '公共',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'previewsql',
  },
  {
    check_type: '升级前自动化检查是否通过',
    side: '公共',
    status: 'ignore',
    start: '',
    end: '',
    open: false,
    open_pm: '',
    open_time: '',
    log: '',
    rowKey: 'auto_check',
  },
];
